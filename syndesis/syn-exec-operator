#!/bin/bash

###
#
# Execute the syndesis operator in isolation
#
# When developing the syndesis operator, the following scripts provide the build sequence:
#
# 1. syn-compile-op       -> Compile the operator to check for syntax errors
# 2. syn-install-op            -> Install the operator and upload it
# 3. syn-exec-op             -> Execute the operator to create a running syndesis
#
###

while getopts a:c:e option
do
  case "${option}"
  in
    a) ADDONS=$OPTARG
    ;;
    c) CR=$OPTARG
    ;;
    e) EJECT=1
    ;;
    :)
      echo "Invalid option: $OPTARG requires an argument" 1>&2
      exit 1
      ;;
    \?)
      echo "Invalid Option: -$OPTARG" 1>&2
      exit 1
      ;;
  esac
done
shift $((OPTIND -1))

cd $GOPATH/src/github.com/syndesisio/syndesis/install/operator

OPERATOR_BINARY=./dist/linux-amd64/syndesis-operator
if [ ! -f "$OPERATOR_BINARY" ]; then
  echo "Cannot find operator binary"
  exit 1
fi

OPTIONS="app"
if [ -n "$ADDONS" ]; then
  echo "Executing with addons $ADDONS"
  OPTIONS="$OPTIONS --addons $ADDONS"
fi

if [ -n "$CR" ]; then
  echo "Executing with custom CR from $CR"
  if [ ! -f "$CR" ]; then
    echo "Custom resource does not exist ... exiting"
    exit 1
  fi

  OPTIONS="$OPTIONS --custom-resource $CR"
fi

if [ -n "$EJECT" ]; then
  echo "Executing with eject ..."
  OPTIONS="$OPTIONS -e yaml"
fi

${OPERATOR_BINARY} install ${OPTIONS}

