#!/bin/bash

###
#
# Build the syndesis operator locally and upload the imagestream to the local openshift
#
# When developing the syndesis operator, the following scripts provide the build sequence:
#
# 1. syn-compile-op       -> Compile the operator to check for syntax errors
# 2. syn-install-op            -> Install the operator and upload it
# 3. syn-exec-op             -> Execute the operator to create a running syndesis
#
###

while getopts dts:v: option
do
  case "${option}"
  in
    d) DEVSUPPORT=1;;
    t) TESTSUPPORT=1;;
    s) STORAGE_CLASS=$OPTARG;;
    v) VOLUME_NAME=$OPTARG;;
  esac
done

version=`oc version | grep -Eiv 'kubernetes|server' | grep -o '[0-9]\{1,\}\.[0-9]\{1,\}\.[0-9]\{1,\}\?'`
echo "Using oc version $version"
if [ -z "$version" ]; then
  version="4.2"
fi

if [[ "$version" = 4.* ]]; then
  DOMAIN="apps-crc.testing"
else
  HOST=$(hostname)
  DOMAIN=${HOST#*.*}
fi

echo "Using domain ... $DOMAIN"

if [ -z "$GOPATH" ]; then
  echo "To compile syndesis using go, the syndesis project should be located in the following location:"
  echo "\$GOPATH/src/github.com/src/syndesisio/syndesis"
  echo "The GOPATH env variable should be set according to conform to the location above"
  exit 1
fi

cd $GOPATH/src/github.com/syndesisio/syndesis/install/operator

source "$(pwd)/../../tools/bin/commands/util/common_funcs"
source "$(pwd)/../../tools/bin/commands/util/operator_funcs"
source "$(pwd)/../../tools/bin/commands/util/openshift_funcs"
source "./.lib.sh"

OPERATOR_IMAGE_NAME="$(readopt --image-name         docker.io/syndesis/syndesis-operator)"
OPERATOR_IMAGE_TAG="$(readopt  --image-tag          latest)"
S2I_STREAM_NAME="$(readopt     --s2i-stream-name    syndesis-operator)"
OPERATOR_BUILD_MODE="$(readopt --operator-build     go)"
IMAGE_BUILD_MODE="$(readopt    --image-build        auto)"
SOURCE_GEN="$(readopt          --source-gen         on)"
GO_BUILD_OPTIONS="$(readopt    --go-options         '')"

OPERATOR_BINARY=./dist/linux-amd64/syndesis-operator
if [ ! -f "$OPERATOR_BINARY" ]; then
  echo "Cannot find operator binary"
  exit 1
fi

myuser=$(oc whoami)

oc-login-admin
oc get clusterrolebindings > /dev/null 2>&1
if [ $? -ne 0 ]; then
  echo "Not successfully logged in as cluster-admin ... exiting"
  exit 1
fi

#
# Executed as cluster-admin
#
${OPERATOR_BINARY} install cluster
${OPERATOR_BINARY} grant --user ${myuser}

oc-login
if [ "$(oc whoami)" != "${myuser}" ]; then
  echo "Logged in as alternative user to that which has been granted syndesis permissions"
  exit 1
fi

#
# Only installs the image stream configuration
#
${OPERATOR_BINARY} install operator

sleep 3

while true;
do
  echo "Waiting for syndesis-operator config ..."
  oc get dc/syndesis-operator
  if [ $? -eq 0 ]; then
    break
  fi
done

if [ -n "$DEVSUPPORT" ]; then
  echo "Turning on dev support"
  oc set env dc/syndesis-operator DEV_SUPPORT=true
fi

if [ -n "$TESTSUPPORT" ]; then
  echo "Turning on test-support"
  oc set env dc/syndesis-operator TEST_SUPPORT=true
fi

if [ -n "$VOLUME_NAME" ]; then
  echo "Setting db volume name to $VOLUME_NAME"
  oc set env dc/syndesis-operator DATABASE_VOLUME_NAME="$VOLUME_NAME"
fi

if [ -n "$STORAGE_CLASS" ]; then
  echo "Setting db storage class to $STORAGE_CLASS"
  oc set env dc/syndesis-operator DATABASE_STORAGE_CLASS="$STORAGE_CLASS"
fi

#
# Update the route hostname
#
oc set env dc/syndesis-operator ROUTE_HOSTNAME="syndesis-syndesis.${DOMAIN}"

#
# Actually builds and upload the operator image
#
build_image $IMAGE_BUILD_MODE $OPERATOR_IMAGE_NAME $OPERATOR_IMAGE_TAG $S2I_STREAM_NAME
